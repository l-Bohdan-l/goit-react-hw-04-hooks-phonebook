{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactListItem.module.scss","components/Container/Container.module.scss","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetInput","className","styles","form","preventDefault","inputWrapper","input","onChange","type","pattern","title","required","button","ContactListItem","id","onDelete","onClick","ContactsList","contacts","list","map","contact","item","defaultProps","Container","children","section","Filter","findLabel","findInput","App","setContacts","filter","setFilter","useEffect","contactsFromStorage","localStorage","getItem","parsedStoragedContacts","JSON","parse","setItem","stringify","filteredContacts","lowerCaseFilter","toLowerCase","includes","getFilteredContacts","nanoid","some","checkedContact","alert","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ccec081.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2skzM\",\"inputWrapper\":\"ContactForm_inputWrapper__3-Zkq\",\"input\":\"ContactForm_input__2L1LV\",\"button\":\"ContactForm_button__2BWFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__RkXnd\",\"item\":\"ContactList_item__3xOIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLabel\":\"Filter_findLabel__1l1fA\",\"findInput\":\"Filter_findInput__9r8bU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__1FOQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__oMR50\"};","import styles from './ContactForm.module.scss';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n\nexport function ContactForm({onSubmit}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }  \n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    resetInput();\n  };\n\n  const resetInput = e => {\n    setName('');\n    setNumber('');\n  };\n  \n    return (\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.inputWrapper}>\n          Name\n          <input\n            className={styles.input}\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={styles.inputWrapper}>\n          Number\n          <input\n            className={styles.input}\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n\nContactForm.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.scss';\n\nexport const ContactListItem = ({ name, number, id, onDelete }) => {\n  return (\n    <>\n      <span>\n        {name} : {number}\n      </span>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n      >\n        x\n      </button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { ContactListItem } from './ContactListItem';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\n\nexport const ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => (\n        <li className={styles.item} key={contact.id}>\n          <ContactListItem {...contact} onDelete={onDelete} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.scss';\n\nexport const Container = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nContainer.defaultProps = {\n  title: '',\n  children: [],\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.findLabel}>\n      Find contacts by Name\n      <input\n        className={styles.findInput}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import './App.scss';\nimport React from 'react';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactsList } from './components/ContactList/ContactList';\nimport { Container } from './components/Container/Container';\nimport { nanoid } from 'nanoid';\nimport { Filter } from './components/Filter/Filter';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [name, setName] = useState('');\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contactsFromStorage = localStorage.getItem('contacts');\n    const parsedStoragedContacts = JSON.parse(contactsFromStorage);\n    if (parsedStoragedContacts) {\n      setContacts(parsedStoragedContacts);\n    }\n  },[]);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const createContact = ( name, number) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    const dublicateContact = contacts.some(checkedContact => {\n      return checkedContact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    if (dublicateContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId))    \n  };\n\n  const changeFilter = e => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n\n  const getFilteredContacts = () => {\n    const lowerCaseFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(lowerCaseFilter),\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Container title=\"Phonebook\">\n          <ContactForm onSubmit={createContact} />\n        </Container>\n        <Container title=\"Contacts\">\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactsList\n            contacts={filteredContacts}\n            onDelete={deleteContact}\n          ></ContactsList>\n        </Container>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}